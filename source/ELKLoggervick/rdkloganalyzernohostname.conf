input { 

#	file {
#		path => "C:/DRIVE_1/PLATFORM/PerfAnalysis/Dev/others/LogsModified.txt"
#		start_position => "beginning"
#	}
# 	"logstash -f rdkloganalyzer.conf --path.data configdata -w 1"
# Streaming command
# tail -f ~/WS/logstash/test.txt | nc -u 192.168.1.7 5044

	udp	{
        	port => 5044
    	}
}

filter {
	split {
  		field => "message"
  		terminator => "\n" 
 	}
	mutate { gsub => [ "message", "[\r]", "" ] }

	grok {
		match => { "message" => "%{SYSLOGBASE} \[%{NUMBER:no}\] %{LOGLEVEL:log-level} \[%{DATA:[@metadata][module]}\] %{WORD:fname}\: %{WORD:[@metadata][action]}" }
	}
	
	if "_grokparsefailure" in [tags] {
#		mutate { add_tag => [ "_grokparsefailureYes" ] }
		mutate { 
			remove_tag => [ "_grokparsefailure" ] 
			add_field => {"host" => "raspberrypi-rdk-mc"}
		}
		grok {
			match => { "message" => "%{SYSLOGTIMESTAMP} %{WORD:program}\[%{NUMBER:pid}\]: \[%{NUMBER:no}\] %{LOGLEVEL:log-level} \[%{DATA:[@metadata][module]}\] %{WORD:fname}\: %{WORD:[@metadata][action]}" }
		}
	}
	
		
	if [@metadata][action] == "Enter" or [@metadata][action] == "Exit" {
		
		mutate { 
			add_field => {"action" => "%{[@metadata][action]}"}
			add_tag => [ "profiling" ] 
			add_tag => [ "%{[@metadata][action]}" ]
		}

		if [@metadata][action] == "Enter" {
			mutate {
#				add_tag => [ "addtime" ]
				add_field => {"elapsed_time" => 0 }
				add_field => {"elapsed_time_ms" => "0.000" }
			
			}
			mutate {
#				add_tag => [ "convert" ]
				convert => {
					 "elapsed_time" => "integer" 
					 "elapsed_time_ms" => "float"
				}
			}
		}

		mutate {
			add_field => { "module" => "%{[@metadata][module]}"}
			split => { "[@metadata][module]" => ":" }
        		add_field => { "filename" => "%{[@metadata][module][0]}" }
			add_field => { "uniqid" => "%{filename} %{fname}" }
			remove_field => [ "filename" ]
		}
		
		date {
			locale => "en"
			match => [ "timestamp", "MMM dd HH:mm:ss.SSSSSS" ]
#			target => "newtime"
		}
		
		elapsed {
    			unique_id_field => "uniqid"
    			start_tag => "Enter"
    			end_tag => "Exit"
#    			add_tag => [ "time_elapsed" ]
#			timeout => 3
			keep_start_event => "last"
		}
				
		if "elapsed" in [tags] {
        		ruby { code => 'event.set("elapsed_time_ms", 1000.0 * event.get("elapsed_time"))' }
#			mutate { add_tag => [ "exec_time_elapsed" ] }
#			mutate { add_tag => [ "%{elapsed_time_ms}" ] }
    		}
	}
}

output {
	if "_grokparsefailure" not in [tags] and "profiling" in [tags] {
#	if "_grokparsefailure" not in [tags] {
#  		stdout { codec => rubydebug }
		elasticsearch { 
			hosts => ["localhost:9200"]
			index => "testrdk"
	 	}
	}
#	file {
#   		path => "C:/DRIVE_1/PLATFORM/PerfAnalysis/Dev/others/outputfile.txt"
#   		codec => line { format => "custom format: %{message}"}
# 	}
	
}